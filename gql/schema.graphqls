type Query {
  networkManager: NetworkManager!
}

type Mutation {
  networkManager(input: NetworkManagerInput!): NetworkManager!
}

type NetworkManager {
  devices: [Device!]!
  allDevices: [Device!]!
  checkpoints: [Checkpoint!]!
  networkingEnabled: Boolean!
  wirelessEnabled: Boolean!
  wirelessHardwareEnabled: Boolean!
  wwanEnabled: Boolean!
  wwanHardwareEnabled: Boolean!
  connectivity: ConnectivityState!
  connectivityCheckAvailable: Boolean!
  connectivityCheckEnabled: Boolean!
}

input NetworkManagerInput {
  wirelessEnabled: Boolean
  wwanEnabled: Boolean
}

type Device {
  interface: String!
}

type Checkpoint {
  devices: [Device!]!
}

enum ConnectivityState {
  Unknown
  None
  Portal
  Limited
  Full
}